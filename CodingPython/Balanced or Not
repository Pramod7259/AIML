def is_balanced(expression):
    stack = []
    pairs = {')': '(', '}': '{', ']': '['}

    for char in expression:
        if char in pairs.values():  # If it's an opening bracket
            stack.append(char)
        elif char in pairs.keys():  # If it's a closing bracket
            if not stack or stack.pop() != pairs[char]:
                return False

    return not stack  # Stack should be empty if balanced

# Example Usage:
expr1 = "{[()()]}"  # Balanced
expr2 = "{[(])}"    # Not balanced

print(is_balanced(expr1))  # Output: True
print(is_balanced(expr2))  # Output: False