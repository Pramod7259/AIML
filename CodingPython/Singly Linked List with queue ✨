class Node:
    def __init__(self, item):
        self.data = item
        self.link = None

class Queue:
    def __init__(self):
        self.front = None
        self.rear = None

    def enqueue(self, d):
        temp = Node(d)
        if self.rear is None:
            self.front = self.rear = temp
        else:
            self.rear.link = temp
            self.rear = temp
        print("Added element is:", d)

    def dequeue(self):
        if self.front is None:
            print("Queue is empty, you can't remove")
        else:
            removed = self.front
            self.front = self.front.link
            if self.front is None:
                self.rear = None
            print("Removed element is:", removed.data)

    def display(self):
        if self.front is None:
            print("Queue is empty")
        else:
            cur = self.front
            print("Current Queue:")
            while cur:
                print(cur.data, end=" ")
                cur = cur.link
            print()

# Create queue object
q = Queue()

# Enqueue elements
q.enqueue(10)
q.enqueue(20)
q.enqueue(30)
q.enqueue(40)

# Display queue
q.display()

# Dequeue elements one by one
q.dequeue()
q.display()
q.dequeue()
q.display()
q.dequeue()
q.display()
q.dequeue()
q.dequeue()